# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import io
import numpy as np
from PIL import Image
from transformer_model_helper import TransformerModel 
from CNN_model_helper import CNNModel
import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QImage, QPixmap, QPalette, QPainter
from PyQt5.QtPrintSupport import QPrintDialog, QPrinter
from PyQt5.QtWidgets import QLabel, QSizePolicy, QScrollArea, QMessageBox, QMainWindow, QMenu, QAction, \
    qApp, QFileDialog
from PyQt5.QtWidgets import QApplication, QLabel, QMainWindow, QMessageBox, QPlainTextEdit, QPushButton
##############################################        ################################################
        ######################################################################################################

transformerModel = TransformerModel()
cnnModel = CNNModel()

def prepare_image(img):
    print(img)
    img = Image.open(img)
    img = img.resize((250,250))
    img = np.asarray(img)
    return img

class Window(QMainWindow):
    sss_image=""
    def __init__(self):
        super().__init__()



        #self.setGeometry(300, 300, 1024, 720)
        self.setFixedSize(960, 600)
        self.set_window()
        self.setWindowTitle("Text Classification")
        self.show()
        
    def set_window(self):
        #________________________________________________________________________________________________________
        self.openBtn = QPushButton("Open",self)
        self.openBtn.setGeometry(140,500, 111, 41)
        self.openBtn.clicked.connect(self.open)
        #________________________________________________________________________________________________________

        #________________________________________________________________________________________________________
        self.image = QLabel(self)
        self.image.setGeometry(20, 25, 450, 450)
        self.image.setBaseSize(0, 0)
        self.image.setAutoFillBackground(True)
        self.image.setFrameShape(QtWidgets.QFrame.Box)
        self.image.setFrameShadow(QtWidgets.QFrame.Raised)
        self.image.setText("")
        #________________________________________________________________________________________________________


        #________________________________________________________________________________________________________
        self.transformer_btn =QPushButton("Transformer",self)
        self.transformer_btn.setGeometry(570, 50, 141, 51)
        self.transformer_btn.clicked.connect(self.trans_predict)
        #________________________________________________________________________________________________________

        #________________________________________________________________________________________________________
        self.cnn_btn = QPushButton("CNN",self)
        self.cnn_btn.setGeometry(570, 160, 141, 51)
        self.cnn_btn.clicked.connect(self.cnn_predict)
        #________________________________________________________________________________________________________

        #________________________________________________________________________________________________________
        self.cnn_label = QLabel(self)
        self.cnn_label.setGeometry(730, 180, 61, 21)
        self.cnn_label.setAlignment(QtCore.Qt.AlignCenter)
        #________________________________________________________________________________________________________

        #________________________________________________________________________________________________________
        self.transformer_label = QLabel(self)
        self.transformer_label.setGeometry(736, 63, 51, 21)
        self.transformer_label.setAlignment(QtCore.Qt.AlignCenter)
         #________________________________________________________________________________________________________

    def open(self):
        options = QFileDialog.Options()
        # fileName = QFileDialog.getOpenFileName(self, "Open File", QDir.currentPath())
        fileName, _ = QFileDialog.getOpenFileName(self, 'QFileDialog.getOpenFileName()', '',
                                                  'Images (*.png *.jpeg *.jpg *.bmp *.gif)', options=options)
        if fileName:
            image = QImage(fileName)
            self.sss_image=fileName
            if image.isNull():
                QMessageBox.information(self, "Image Viewer", "Cannot load %s." % fileName)
                return

            self.image.setPixmap(QPixmap.fromImage(image))
    def trans_predict(self):
        img = prepare_image(self.sss_image)
        self.transformer_label.setText(transformerModel.predict(img))
    def cnn_predict(self):
        img = prepare_image(self.sss_image)
        self.cnn_label.setText(cnnModel.predict(img))

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = Window()
    sys.exit(app.exec_())
